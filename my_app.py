import streamlit as st
import numpy as np
import pandas as pd
import plotly.express as px


st.title("Gerador de Curva de Rarefa√ß√£o üåø")

st.write("## Apresenta√ß√£o")

st.write(
    "Bem vindo! Meu nome √© [Pedro Higuchi](https://www.linkedin.com/in/pedro-higuchi-4085a81b/), Engenheiro Florestal, Doutor em Ci√™ncias Florestais pela Universidade Federal de Lavras e, atualmente, Professor Associado, da Universidade do Estado de Santa Catarina,  onde leciono no Curso de Engenheira Florestal."
)

st.write(
    "Aqui apresento um aplicativo para gerar **Curvas de Rarefa√ß√£o**, que √© uma importante ferramenta anal√≠tica, para quem trabalha com invent√°rios da biodiversidade."
)


st.write("## Contextualiza√ß√£o")

st.write(
    "O n√∫mero de esp√©cies (riqueza) representa uma das dimens√µes da diversidade e √© uma das mais importantes propriedades de um ecossistema."
)

st.write(
    "A sua determina√ß√£o permite infer√™ncias ecol√≥gicas relevantes e pode subsidiar in√∫meras aplica√ß√µes pr√°ticas, tais como em Estudos de Impactos Ambientais, Gest√£o de Unidades Conserva√ß√£o,eo Manejo Sustent√°vel de Recursos Naturais. No v√≠deo abaixo, fa√ßo uma breve apresenta√ß√£o sobre o tema."
)

st.write("## Instru√ß√£o de uso")
st.write("### 1. Prepara√ß√£o do arquivo de entrada:")

st.write(
    "O arquivo de entrada deve estar no formato csv e conter duas colunas: 'especies' (sem acento) e 'n'. A coluna deve ser preenchida com a rela√ß√£o das esp√©cies e a coluna 'n', com o n√∫mero total de indiv√≠duos para cada esp√©cie."
)
st.write("Exemplo:")

st.write(
    pd.DataFrame(
        {
            "Especies": [
                "Araucaria angustifolia",
                "Podocarpus lambertti",
                "Myrcia oblongata",
                "Ilex paraguariensis",
            ],
            "n": [10, 20, 30, 40],
        }
    )
)

st.write("### 2. Inserir arquivo:")

dados = st.file_uploader("Escolha o arquivo csv", type={"csv", "txt"})
if dados is not None:
    df = pd.read_csv(dados, delimiter=";")
    df_long = df.reindex(df.index.repeat(df.n))
    sp_shuffle = []
    for i in range(100):
        sp_shuffle.append(((~df_long.sample(frac=1)["Especies"].duplicated()).cumsum()))
    mean_rarefy_curve = np.mean(sp_shuffle, axis=0)

    fig = px.line(
        x=np.arange(len(df_long)),
        y=mean_rarefy_curve,
        title="Curva de rarefa√ß√£o pelo m√©todo de aleatoriza√ß√£o (n=100)",
        labels={
            "x": "N√∫mero de indiv√≠duos",
            "y": "Riqueza (S)",
        },
        template="plotly_white",
    )

    st.plotly_chart(fig, use_container_width=True)

st.write("## M√©todo utilizado")
st.write(
    "A curva √© constru√≠da a partir da contagem acumulativa de esp√©cies, por meio de 100 aleatoriza√ß√£o de todos os indiv√≠duos existentes no arquivo de entrada. Desta forma, cada valor no Eixo y representa uma m√©dia de n√∫mero de esp√©cies para n individuos obtidos da aleatoriza√ß√£o citada."
)

st.write("## Contato")
st.write(
    "Em caso de d√∫vidas ou outras informa√ß√µes entre em [contato] (https://www.linkedin.com/in/pedro-higuchi-4085a81b/)."
)


@st.cache(allow_output_mutation=True)
def Pageviews():
    return []


pageviews = Pageviews()
pageviews.append("dummy")

try:
    st.markdown("Contador: {}".format(len(pageviews)))
except ValueError:
    st.markdown("Contador: {}".format(1))
